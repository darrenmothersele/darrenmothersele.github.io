<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Darren Mothersele</title>
    <description>Creative Technologist, Drupal Training, Drupal Development, Drupal Consulting</description>
    <link>http://www.darrenmothersele.com</link>
    <atom:link href="http://www.darrenmothersele.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Build Your Own PHP Framework at DrupalCamp London</title>
        <description>&lt;p&gt;I have revised and improved the training in preparation for DrupalCamp next week. I&amp;#39;ve incorporated some feedback, added a bit of theory, and included more practical examples. Join me and level up your PHP development skills in this 1 day course.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Build Your Own PHP Framework.&lt;/p&gt;

&lt;p&gt;Learn modern PHP practices and see the benefits first hand via practical examples. Learn object oriented design and how to apply design patterns.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s a lot of old PHP code and information around on the web. With the massive improvements in PHP in recent years, a lot of this information is wrong and out of date. In this course I will be focusing on only modern, state of the art PHP.&lt;/p&gt;

&lt;p&gt;Moving from Drupal 7 to Drupal 8 means adopting modern, object-oriented, PHP practices. Drupal 8 has gone through a process of &amp;quot;getting off the island&amp;quot; and embracing the wider PHP ecosystem. We, as PHP developers using Drupal, can improve our own processes by doing the same.&lt;/p&gt;

&lt;p&gt;Building your own framework is a great way to learn the fundamentals of modern PHP. Regardless of your choice of framework, this will make you a better developer. A similar foundation of components underlies Drupal, Symfony, Silex, and Lavavel.&lt;/p&gt;

&lt;p&gt;Details:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Learn framework decoupling techniques.&lt;/li&gt;
&lt;li&gt;Write better code by avoiding unnecessary complexity.&lt;/li&gt;
&lt;li&gt;Use Domain Driven Design to tackle complexity and design better solutions.&lt;/li&gt;
&lt;li&gt;Go beyond MVC and start to explore other design patterns such as command bus and repositories.&lt;/li&gt;
&lt;li&gt;Learn simple strategies you can immediately apply to develop better code.&lt;/li&gt;
&lt;li&gt;Understand the components at the core of Drupal 8, many other PHP frameworks and popular PHP apps.&lt;/li&gt;
&lt;li&gt;Digestible 40 minute sections interspersed with practical workshop where you get hands-on experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will need a basic knowledge of PHP and a laptop that can run PHP. You will leave with a better understanding of the principles behind modern PHP and Drupal 8.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://events.r20.constantcontact.com/register/eventReg?oeidk=a07ebt79sow1ef68cab&amp;amp;oseq=&amp;amp;c=&amp;amp;ch=&quot;&gt;Tickets available here&lt;/a&gt;.&lt;/h3&gt;

&lt;p&gt;&amp;pound;295.00 or
&amp;pound;95.00 concession tickets for sole traders, students and charities.
The training will be on Friday March 4, 2016 at City University London.&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Feb 2016 10:30:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/25/php-training-at-drupalcamp-london/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/25/php-training-at-drupalcamp-london/</guid>
      </item>
    
      <item>
        <title>TinyLetter #3 - is the Magic Number</title>
        <description>&lt;p&gt;Posting up my third TinyLetter for posterity.
See my &lt;a href=&quot;http://www.darrenmothersele.com/contact/&quot;&gt;contact page&lt;/a&gt; for details of how to join my &amp;quot;Friends and Family&amp;quot; email list.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Hello!&lt;/p&gt;

&lt;p&gt;I&amp;#39;m happy to say that I&amp;#39;m writing this from the comfort of our new home. Nikki and I found a lovely little flat, just a few minutes walk from Queens Park in North West London.&lt;/p&gt;

&lt;p&gt;A week overlap before Nikki&amp;#39;s tenancy is up has given me a chance to have a clear out. I finally got all my stuff out of storage, after 6 months, and immediately set about purging. And it feels great!&lt;/p&gt;

&lt;p&gt;The last time I had a clear out like this was several years ago, before my sojourn in Sardegna. Since returning to London I&amp;#39;ve collected quite a lot of crap. I recently read &amp;quot;&lt;a href=&quot;http://http//tidyingup.com/books/the-life-changing-magic-of-tidying-up-hc&quot;&gt;The Life-Changing Magic of Tidying Up&lt;/a&gt;&amp;quot; by Marie Kondo. This gave me a different perspective on the process of tidying, and I hope this leads to lasting change. I&amp;#39;m certainly experiencing a clarity, and lightness, that tidying hasn&amp;#39;t given me before.&lt;/p&gt;

&lt;p&gt;I spent a weekend in Brussels for FOSDEM, the annual Free and Open Source Developers Meeting. I joined over 5,000 developers to talk about open source and software freedom.&lt;/p&gt;

&lt;p&gt;It was obvious, while enroute to the opening session, how different this event was going to be. If it wasn&amp;#39;t for the swarm of developers, or the delivery of a truck-load of Club Mate, you could have missed it.&lt;/p&gt;

&lt;p&gt;This was my first FOSDEM. I&amp;#39;ve never been to a conference quite like this. There was no registration required to attend and the sponsorship was subtle. Unlike other tech conferences I&amp;#39;ve attended in recent years. Usually I&amp;#39;d expect excessive corporate branding, and sales pitches disguised as sessions.&lt;/p&gt;

&lt;p&gt;In this sense, FOSDEM is the antithesis of the New Relic DevOps summit I attended last week. I had to leave this &amp;quot;summit&amp;quot; after just a couple of hours because it had been all sales pitch and no content.&lt;/p&gt;

&lt;p&gt;FOSDEM packed in over 310 hours of scheduled content into the weekend. Various communities come together here united by common values of openness and freedom. Values that pervade through every aspect of the event.&lt;/p&gt;

&lt;p&gt;My main takeaway from the weekend was a deeper understanding of the distinction between open source and free software. I&amp;#39;ve been struggling to reconcile my drive to be independent, and to go serverless. I didn&amp;#39;t reach any conclusions this weekend. I didn&amp;#39;t resolve anything, but hearing from others gave me some new perspectives.&lt;/p&gt;

&lt;p&gt;On my return to London I attended Dialogue. I&amp;#39;ve become a regular attendee of these events, on the first Wednesday of the month. The event is &amp;quot;a creative dialogue between science, art, technology, ethics and politics.&amp;quot; Every month I leave frustrated, yet keep going back for more. This month was a subject close to my heart. The conversation was &amp;quot;Privacy, Protection, Publicity: Does Your Freedom Have Boundaries?&amp;quot;&lt;/p&gt;

&lt;p&gt;As usual, there was an incredible panel of experts from various fields. But, as usual, the conversation didn&amp;#39;t go deep enough into any aspect of the topic. Instead, the discussion flits between reasoned insights and misinformed throwaway comments. Despite this the event is very entertaining and informative.&lt;/p&gt;

&lt;p&gt;The current series has come to an end, and they&amp;#39;ve not annouced the next batch yet. I&amp;#39;ll keep an eye out, as it&amp;#39;s a worthwhile way to spend a Wednesday evening.&lt;/p&gt;

&lt;p&gt;I continue to rethink my relationship with technology. This month I [wrote about my decision to leave WhatsApp](http://www.darrenmothersele.com/blog/2016/01/27/why-i-left-whatsapp/. I also summerised my ongoing dithering over &lt;a href=&quot;http://www.darrenmothersele.com/blog/2016/02/02/rethinking-twitter/&quot;&gt;what to do about Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Coming up in the next month...&lt;/p&gt;

&lt;p&gt;DrupalCamp London accepted my session proposal. I&amp;#39;ll be talking about &amp;quot;&lt;a href=&quot;http://www.darrenmothersele.com/blog/2016/01/21/survive-and-thrive-drupal-8/&quot;&gt;surviving - and thriving - during the transition to Drupal 8&lt;/a&gt;&amp;quot;. This talk builds on a &lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/11/16/surviving-open-source-gentrification/&quot;&gt;previous article&lt;/a&gt; where I used gentrification as a metaphore for changes in the Drupal community. I bring in some new research and experiences, and draw some interesting conclusions.&lt;/p&gt;

&lt;p&gt;I will also be running a training day on the Friday. It will be the third year I&amp;#39;ve run training at the Camp. This time I&amp;#39;m doing something different. I&amp;#39;ve created a course called &amp;quot;&lt;a href=&quot;http://www.darrenmothersele.com/blog/2016/02/11/drupal-camp-london-training/&quot;&gt;Build your own PHP Framework&lt;/a&gt;.&amp;quot;&lt;/p&gt;

&lt;p&gt;Conciousness Hacking&lt;/p&gt;

&lt;p&gt;I&amp;#39;ll be attending this &amp;quot;&lt;a href=&quot;http://http//www.meetup.com/Consciousness-Hacking-London/events/228318878/&quot;&gt;Consciousness Hacking&lt;/a&gt;&amp;quot; meetup next month. I&amp;#39;m not sure what to expect, but the event intrigues me. It&amp;#39;s described as &amp;quot;a growing global community encouraging exploration into the ways that technology can be in service to the highest ideals of humanity and support the evolution of our individual and collective experience.&amp;quot; Sounds right up my street!&lt;/p&gt;

&lt;p&gt;Have a great month! Drop me a line and let me know what you&amp;#39;re up to,&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;/p&gt;

&lt;p&gt;Daz&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Feb 2016 14:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/23/tinyletter-3/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/23/tinyletter-3/</guid>
      </item>
    
      <item>
        <title>Playing with Infinity in PHP</title>
        <description>&lt;p&gt;I&amp;#39;ve been playing around with lazy evaluation in PHP.
This is made possible by using Generators, added to PHP 5.5
and refined in PHP 7.
You can do some cool stuff with infinite (or very
large) data sets, and avoid getting stuck in infinite loops.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Imagine you want to create an infinitely long array of the same value.
Here&amp;#39;s a simple bit of code that would do this. Obviously don&amp;#39;t try this.
Just read the code and imagine a world where this is a good idea...&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;function repeat($i)
{
    $output = [];
    while (true)
    {
        $output[] = $i;
    }
    return $output;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;This function would never terminate. You get stuck in an
infinite loop. &lt;code&gt;while(true)&lt;/code&gt; is not something you ever want to see
in a program, right?&lt;/p&gt;

&lt;p&gt;Well, not if you do lazy evaluation. In this context lazy means you
only evaluate as much code as you need to get the result. So you
can have large, even infinite, sets of data, without getting stuck in
long, or infinite, loops.&lt;/p&gt;

&lt;p&gt;PHP has a feature for lazy evaluation. It&amp;#39;s called a Generator,
summoned into being using the magical &lt;code&gt;yield&lt;/code&gt; keyword.
Here&amp;#39;s the stupid repeat, but this time as a generator...&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;function repeat($i)
{
    while (true)
    {
        yield $i;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;You have to be careful using infinite sets.
You can still easily create an unterminating program if you tried to print
out the whole of this Generator function.&lt;/p&gt;

&lt;p&gt;But, what if we just wanted to work with the first 5 items from
our infinite computation. This is now possible because of lazy
evaulation. Here&amp;#39;s a take function that will take
any number of items from any Generator:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;function take($i, Generator $generator)
{
    while ($i-- &amp;gt; 0 &amp;amp;&amp;amp; $generator-&amp;gt;valid())
    {
        yield $generator-&amp;gt;current();
        $generator-&amp;gt;next();
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;Let&amp;#39;s take 5...&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;foreach (take(5, repeat(&amp;#39;Hello&amp;#39;)) as $item)
{
    echo $item, PHP_EOL;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;OK, that was a stupid example. What about something a bit more
interesting? How about the classic fibonnacci sequence generator?&lt;/p&gt;

&lt;p&gt;For some reason the examples I found on both
&lt;a href=&quot;http://stackoverflow.com/questions/19835499/recursive-generators-in-php&quot;&gt;Stack Overflow&lt;/a&gt;
and the &lt;a href=&quot;http://php.net/manual/en/language.generators.syntax.php&quot;&gt;PHP Manual&lt;/a&gt;
were more complex than they needed to be.&lt;/p&gt;

&lt;p&gt;Here is the simplist infinite fibonacci generator I can think of...&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;function fib()
{
    yield $i = 0;
    yield $j = 1;
    while (true) {
        yield $k = $i + $j;
        $i = $j;
        $j = $k;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;And here&amp;#39;s the first 50 fibonacci numbers...&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;foreach (take(50, fib()) as $item)
{
    echo $item, PHP_EOL;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;And, here&amp;#39;s the first 10, skipping the first 0 using a tail function:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;function tail(Generator $list)
{
    $list-&amp;gt;next();
    yield from $list;
}

foreach (take(50, tail(fib())) as $item)
{
    echo $item, PHP_EOL;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;In case you&amp;#39;re curious, there are actual use cases for this.
For example, this &lt;a href=&quot;https://github.com/MarkBaker/GeneratorQuadTrees&quot;&gt;Quad Tree&lt;/a&gt;
data structure implementation.&lt;/p&gt;

&lt;p&gt;Generators may not offer better performance in terms of execution speed.
But, generator based algorythms offer a much lower memory overhead
as you&amp;#39;re not having to pass around the full data sets.&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Feb 2016 09:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/18/php-to-infinity/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/18/php-to-infinity/</guid>
      </item>
    
      <item>
        <title>Build Your Own PHP Framework</title>
        <description>&lt;p&gt;I&amp;#39;m excited to announce that I&amp;#39;ll be back running training at this year&amp;#39;s Drupal Camp in London. This will be the 3rd year in a row that I&amp;#39;ve offered training at the camp. I&amp;#39;m doing something a bit different this time...&lt;/p&gt;

&lt;!--break--&gt;

&lt;h2&gt;Build Your Own PHP Framework&lt;/h2&gt;

&lt;p&gt;In this training you will build your own PHP framework.&lt;/p&gt;

&lt;p&gt;But, why reinvent the wheel?&lt;/p&gt;

&lt;p&gt;Building your own framework is a great way to learn the fundamentals of modern PHP. Regardless of your choice of framework, this will make you a better developer. A similar foundation of components underlies Drupal, Symfony, Silex, and Lavavel.&lt;/p&gt;

&lt;p&gt;If you are a developer going from Drupal 7 to Drupal 8 then you need to adopt an object-oriented mindset.&lt;/p&gt;

&lt;p&gt;Drupal doesn&amp;#39;t always get it right. If you understand the basic principles you know when and why you&amp;#39;re breaking them. You can make pragmatic choices as a programmer, without embodying bad practices.&lt;/p&gt;

&lt;p&gt;&amp;quot;Build Your Own Framework&amp;quot; is a fun training to learn modern PHP. You will learn the &amp;quot;SOLID&amp;quot; principles of PHP package design. The training will demystify dependency injection, hexagonal architecture and other design patterns. We will look at HTTP Foundation and the other Symfony components.&lt;/p&gt;

&lt;p&gt;Come armed with a basic knowledge of PHP, a laptop that can run PHP, and an open mind. Leave with a better understanding of the principles behind modern PHP and Drupal 8.&lt;/p&gt;

&lt;h3&gt;&lt;a href=&quot;https://events.r20.constantcontact.com/register/eventReg?oeidk=a07ebt79sow1ef68cab&amp;amp;oseq=&amp;amp;c=&amp;amp;ch=&quot;&gt;Tickets available here&lt;/a&gt;.&lt;/h3&gt;

&lt;p&gt;The training will be held on Friday March 4, 2016 at City University London.&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Feb 2016 17:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/11/drupal-camp-london-training/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/11/drupal-camp-london-training/</guid>
      </item>
    
      <item>
        <title>PHP Processing Pipeline</title>
        <description>&lt;p&gt;If you&amp;#39;re faced with refactoring a huge bunch of sequential code
then a pipeline may be the answer.
With a processing pipeline you create your code in stages.
Then you compose the stages into a pipeline, and pass your
input for processing.&lt;/p&gt;

&lt;p&gt;This is great because each of the stages can be easily tested
independently. It also makes the code much easier to read and
maintain.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;There&amp;#39;s a nice and simple implementation published by the
&lt;a href=&quot;http://thephpleague.com/&quot;&gt;League of Extraordinary Packages&lt;/a&gt;.
I&amp;#39;ve created a fork (&lt;a href=&quot;https://github.com/darrenmothersele/pipeline&quot;&gt;on GitHub here&lt;/a&gt;)
which offers an even simpler syntax.&lt;/p&gt;

&lt;p&gt;Here&amp;#39;s a very basic example to show off this new syntax.
You create your stages as simple classes with an invoke method.
For example:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;class Double {
    public function __invoke($payload)
    {
        return $payload * 2;
    }
}

class Square {
    public function __invoke($payload)
    {
        return $payload * $payload;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;You could even pass in parameters to the stage constructor:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;class Add {
    private $i;
    public function __construct($i)
    {
        $this-&amp;gt;i = $i;
    }
    public function __invoke($payload)
    {
        return $payload + $this-&amp;gt;i;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;Then create a &lt;code&gt;Pipeline&lt;/code&gt; to chain the stages together:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;$pipe = (new Pipeline)-&amp;gt;Double()-&amp;gt;Square()-&amp;gt;Add(10);
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;And then you can process values using the Pipeline:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;echo $pipe-&amp;gt;process(10), PHP_EOL;
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;You can even process a list of values:&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;var_dump(array_map($pipe, [1, 2, 3]));
&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
&lt;p&gt;Obviously you are not just limited to processing integers as in these
examples. XML documents, converting to JSON, filtering, translating
and other transformations are great candidates for pipelines stages.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve submitted a pull request for my simple modification. All I did
was add an implementation of the &lt;code&gt;__call()&lt;/code&gt; method so you can
add stages without having to explicitly &lt;em&gt;new&lt;/em&gt;-up objects and
pass them into the &lt;code&gt;pipe()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Hopefully my pull request gets accepted. The only thing to be aware
of is that I made use of the variadic operator, so it needs a PHP
version of 5.6 or greater.&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Feb 2016 14:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/11/processing-pipelines-php/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/11/processing-pipelines-php/</guid>
      </item>
    
      <item>
        <title>The Future of (My) Web Part 3 - Rethinking Twitter</title>
        <description>&lt;p&gt;I feel sorry for Twitter. It&amp;#39;s never been sure what it&amp;#39;s supposed to be. Twitter pioneered and popularised the idea of microblogging, then  almost killed it.&lt;/p&gt;

&lt;p&gt;As part of my ongoing experiment I have stopped using
&lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/12/03/work-in-progress/&quot;&gt;Facebook&lt;/a&gt; and
&lt;a href=&quot;http://www.darrenmothersele.com/blog/2016/01/27/why-i-left-whatsapp/&quot;&gt;WhatsApp&lt;/a&gt;. The decision is not as simple this time as I don&amp;#39;t want to completely remove myself from Twitter.&lt;/p&gt;

&lt;!--break--&gt;

&lt;h2&gt;What&amp;#39;s wrong with Twitter&lt;/h2&gt;

&lt;p&gt;I joined Twitter in April 2008 while at the first Social Innovation camp. The camp organisers used Twitter to broadcast messages to all attendees. It was useful.&lt;/p&gt;

&lt;p&gt;Twitter&amp;#39;s functionality was simple. It became a great example of how innovation can come from users. Features such as hash-tags emerged from how people used the technology. Compare this with other services that learnt how to limit and control their users by progressively introducing features. Such as Facebook&amp;#39;s slow boiling of the privacy frog.&lt;/p&gt;

&lt;p&gt;Twitter is another corporate controlled silo. And, compared to the lo-fi, elegant, and clean idea of 140 character public messaging, Twitter today is a mess. My stream flooded with image spam posted to draw attention to tweets. And, unnecessary screenshots of text posted to bypass the limited message size.&lt;/p&gt;

&lt;h2&gt;How I Currently use Twitter&lt;/h2&gt;

&lt;p&gt;To plan my future relationship with Twitter I have first looked at
how I currently use the service. I&amp;#39;ve identified the following types of usage:&lt;/p&gt;

&lt;h3&gt;0. Aggregator&lt;/h3&gt;

&lt;p&gt;I have a network of friends and colleagues in digital technology, creative coding, free software, and other interests. Twitter collects the thoughts, opinions, and silliness from this eclectic mix of people. This makes it fun and serious, informative and weird.&lt;/p&gt;

&lt;p&gt;I wouldn&amp;#39;t find this variety of updates if they were not all aggregated into once place. But, at the same time, this can be a distracting waste of time. And it&amp;#39;s getting harder to filter out the signal from the noise.&lt;/p&gt;

&lt;h3&gt;1. Live-blogging&lt;/h3&gt;

&lt;p&gt;If I&amp;#39;m at an event with Wifi signal I tend to tweet a lot more than usual. I &lt;em&gt;live-blog&lt;/em&gt; my experience of the event, mainly for my own benefit. This makes it easier to remember what I did when I review the event afterwards.&lt;/p&gt;

&lt;h3&gt;2. RSS feed&lt;/h3&gt;

&lt;p&gt;Back in the day, people would subscribe to my RSS feed to get updated when I added new content to my site. Since Google killed RSS when they shut down Reader, nobody seems to do that anymore.&lt;/p&gt;

&lt;p&gt;I use Twitter to post up bits from my own blog and writing, with links back to my site. Using it as a way to let people know I&amp;#39;ve posted something new.&lt;/p&gt;

&lt;h3&gt;3. Web Links&lt;/h3&gt;

&lt;p&gt;I also post up quotes and links to things I&amp;#39;ve found on the net. Useful stuff I&amp;#39;ve found for work, quotes for inspiration, or things related to my interests.&lt;/p&gt;

&lt;h3&gt;4. Observations&lt;/h3&gt;

&lt;p&gt;Sometimes I feel the need to comment on things I observe. I particularly enjoy paradox and inconsistency. If I have my phone on me, and I&amp;#39;m in the right mood, I share on Twitter.&lt;/p&gt;

&lt;h3&gt;5. Conversation&lt;/h3&gt;

&lt;p&gt;Twitter is a noisy place to try and have a conversation with people. I love how anyone can chime in and join a conversation. I always enjoy hearing from other points of view.&lt;/p&gt;

&lt;p&gt;Sometimes I start public conversations with companies that have disappointed me. It&amp;#39;s a way to get a response, when they don&amp;#39;t answer the phone or emails.&lt;/p&gt;

&lt;h3&gt;6. Brain-dump&lt;/h3&gt;

&lt;p&gt;Sometimes I just post up random thoughts I&amp;#39;ve been having. Maybe these are things I don&amp;#39;t need to shout out to the world. But stuff I still want to log somewhere. Twitter isn&amp;#39;t the correct place for this.&lt;/p&gt;

&lt;h2&gt;Alternative to Twitter&lt;/h2&gt;

&lt;p&gt;I still want to engage with my network on Twitter. But I want to decouple my communication from the silo. This is what the Indie Web refer to as &lt;a href=&quot;https://indiewebcamp.com/POSSE&quot;&gt;POSSE&lt;/a&gt; (Post on Own Site, Syndicate Elsewhere).&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been thinking of what I&amp;#39;d like to build as an alternative to Twitter.
&lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/07/12/happy-birthday-bucky/&quot;&gt;Buckminster Fuller&lt;/a&gt;&amp;#39;s Dymaxion Chronofile comes to mind. Bucky documented his entire life, from the point where he started to live his life as an experiment, in what he called a &amp;quot;Chronofile&amp;quot;.&lt;/p&gt;

&lt;p&gt;I have already implemented a private &amp;quot;idea log&amp;quot;. This is somewhere to post all the random thoughts that are not yet fully formed. This helps me collect disparate thoughts and allow them to coalesce
into something more considered. It creates space in my mind by getting things out of my head. Working like a real extension to my memory, some things stick around. But, also like real memory, I need a way to forget. Sometimes, it&amp;#39;s good to let go.&lt;/p&gt;

&lt;p&gt;Posting notes to my own site, and syndicating them to Twitter, is now top of my list. This will be the next feature to develop for my website.&lt;/p&gt;
</description>
        <pubDate>Tue, 02 Feb 2016 00:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/02/rethinking-twitter/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/02/rethinking-twitter/</guid>
      </item>
    
      <item>
        <title>My First Front-end London</title>
        <description>&lt;p&gt;Last night I got to attend &lt;a href=&quot;http://www.frontendlondon.co.uk/&quot;&gt;FEL&lt;/a&gt; for the first time. The popular meetup, hosted by &lt;a href=&quot;http://madebymany.com/&quot;&gt;Made by Many&lt;/a&gt;, celebrating it&amp;#39;s 3rd anniversary last night. I have
&lt;a href=&quot;https://calumryan.com/&quot;&gt;Calum Ryan&lt;/a&gt;, fellow Indiewebber, to thank for sorting me out a ticket.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Calum was up first talking about &lt;a href=&quot;http://indiewebcamp.com/&quot;&gt;#indieweb&lt;/a&gt;. He summarised the movement well. The talk gave detail of the motivations, principles, and technology. I was happy to learn that &lt;a href=&quot;https://www.w3.org/TR/2016/WD-webmention-20160112/&quot;&gt;Webmention has a first draft of a W3C standard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was encouraging to hear this was Calum&amp;#39;s first presentation. A great start, and I hope he continues on this path.&lt;/p&gt;

&lt;p&gt;Then &lt;a href=&quot;http://bodil.lol/&quot;&gt;Bodil Stokke&lt;/a&gt; took us on a tour of generators in ES6. This makes me want to do more Javascript. If only because I have a thing for the world &lt;em&gt;yield&lt;/em&gt;. It might be my favourite word. I love all that it implies. For me, in conjures up images of Taoism, effortless action, and the path of least resistance.&lt;/p&gt;

&lt;p&gt;Of particular interest was the backwards use of generators as consumers used in monads. We saw generators combined with Promises to write asynchronous code without callbacks. Simply beautiful.&lt;/p&gt;

&lt;p&gt;The presentation is &lt;a href=&quot;http://bodil.lol/generators/&quot;&gt;online here&lt;/a&gt;.
I also made a note to check out the &lt;a href=&quot;http://github.com/tj/co&quot;&gt;Co library&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Wrapping up the trio of speakers for the night was &lt;a href=&quot;http://macr.ae/&quot;&gt;Callum Macrae&lt;/a&gt;.
With more Ls and more LOLs that the first Calum.
He took us on a humorous tour of ES6, under the guise of deprecating jQuery.&lt;/p&gt;

&lt;p&gt;We saw how to replace jQuery features with native Javascript. With a polyfil, or transpiling, it seems jQuery does not add anything. Native Javascript winning on features in some cases. Callum also added that the overhead of using Babel is less than including jQuery. So there is no need for jQuery. Unless you want &lt;a href=&quot;https://gist.github.com/rwaldron/8720084#file-reasons-md&quot;&gt;old browser compatibility&lt;/a&gt; or are using a library with a dependency on jQuery.&lt;/p&gt;

&lt;p&gt;An entertaining and informative night. I&amp;#39;ll definitely be back.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/01/29/my-first-frontend-london/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/01/29/my-first-frontend-london/</guid>
      </item>
    
      <item>
        <title>Drupal Predictions for 2016</title>
        <description>&lt;p&gt;This will be a momentus year for Drupal.&lt;/p&gt;

&lt;p&gt;David H, Drupal.org webmaster, was
&lt;a href=&quot;https://twitter.com/FromWayDowntown/status/692375858175148032&quot;&gt;soliciting responses&lt;/a&gt;
to &lt;a href=&quot;https://www.drupal.org/node/2652402&quot;&gt;this thread&lt;/a&gt; on Twitter.
I kept my &lt;a href=&quot;https://www.drupal.org/node/2652402#comment-10792382&quot;&gt;predictions&lt;/a&gt;
brief, but thought I would post here to elaborate.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Some people may be predicting &lt;a href=&quot;https://securityintelligence.com/news/new-year-new-problems-cms-vulnerabilites-take-on-2016/&quot;&gt;a year of security vulnerabilities&lt;/a&gt;. I believe we have a
year of innovation ahead of us.&lt;/p&gt;

&lt;p&gt;Drupal&amp;#39;s ecosystem of contributed modules is playing catch-up since the
release of version 8. It has been years since CCK and Views were just
experiments in the contrib module space.
They are now established as foundation of Drupal core.
Contrib (the wider community of Drupal developers) can now get back to innovating.&lt;/p&gt;

&lt;p&gt;&amp;quot;Get back to innovating&amp;quot; isn&amp;#39;t much of a prediction. I thought about it
some more and came up with three things I think are likely to happen in 2016...&lt;/p&gt;

&lt;h2&gt;CMS-as-a-Service&lt;/h2&gt;

&lt;p&gt;The era of the monolythic, does-it-all, CMS is coming to an end.
The Drupal community talk a lot about &lt;em&gt;progressive decoupling&lt;/em&gt;
&lt;a href=&quot;http://buytaert.net/should-we-decouple-drupal-with-a-client-side-framework&quot;&gt;[1]&lt;/a&gt;
&lt;a href=&quot;http://buytaert.net/selecting-a-client-side-framework-for-drupal&quot;&gt;[2]&lt;/a&gt;.
But, the idea of a &lt;em&gt;fully decoupled&lt;/em&gt; backend is becoming established
in other areas. Services like &lt;a href=&quot;https://www.contentful.com/&quot;&gt;Contentful&lt;/a&gt; already
provide a fully decoupled, headless CMS.&lt;/p&gt;

&lt;p&gt;Systems become decoupled, we move to a microservice architecture, and evaluate server-less options. It is conceivable that a Content API could become part of the infrastructure. Amazon are the leading Infrastructure-as-a-Service provider. A Content API (or CMS-as-a-Service) would fit in their suite of cloud computing services.&lt;/p&gt;

&lt;p&gt;I did an experiment recently where I put Amazon&amp;#39;s API Gateway in front of an EC2 instance running Drupal. This gives a more robust API on top of Drupal 8&amp;#39;s Rest support. Monitoring, traffic management, and flexible security controls are standard.
This approach offers several advantages, including: &lt;a href=&quot;http://swagger.io/&quot;&gt;Swagger&lt;/a&gt; support;
CloudFront caching for performance; and input/output
translation with data models defined with JSON schema.&lt;/p&gt;

&lt;h2&gt;Acquia IPO&lt;/h2&gt;

&lt;p&gt;Going public was always on the cards for Acquia, but they said they
&lt;a href=&quot;http://bostinno.streetwise.co/2015/10/21/acquia-engage-ceo-talks-content-hub-valuation-ipo/&quot;&gt;are in no rush to IPO&lt;/a&gt;. This could be the year. Adoption of D8 will being changes
to the user base and continued adoption at the enterprise level.&lt;/p&gt;

&lt;p&gt;This will be accompanied by more consolidation in the Drupal world.
One of the biggest risks I see is with Drupal companies taking on
bigger projects. A single client becomes a large contributer to their
revenue, in some cases I&amp;#39;ve heard as much as 70%. This is a risky situation
to be in, if you rely on one client for a majority of your business.
The solution is for Drupal companies to come together to form larger entities.&lt;/p&gt;

&lt;p&gt;This is just a continuation of an existing trend.
&lt;a href=&quot;http://www.wunderkraut.com/blog/worlds-largest-drupal-provider-created-by-merger/2012-08-20&quot;&gt;Wunderkraut&lt;/a&gt;,
was the most high-profile merger in the community.
Followed by many more, involving companies such as
&lt;a href=&quot;http://wearepropeople.com/news/propeople-and-blink-reaction-come-together-to-form-ffw-a-new-global-digital-agency&quot;&gt;FFW&lt;/a&gt;,
&lt;a href=&quot;http://www.mediacurrent.com/blog/mediacurrent-acquired-by-code-and-theory&quot;&gt;MediaCurrent&lt;/a&gt;,
&lt;a href=&quot;https://www.phase2technology.com/blog/phase2-and-opensourcery-whats-new-in-portland/&quot;&gt;Phase2&lt;/a&gt;, and
&lt;a href=&quot;http://i-kos.com/press-release/2014-09-22/mogdesign-joins-ikos-digital-accelerate-drupal-growth&quot;&gt;i-Kos&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Composer Support and Decoupled Components&lt;/h2&gt;

&lt;p&gt;Composer support in Drupal needs some work.
There are some big wins to be had by embracing the
Composer (and Packagist) workflow.&lt;/p&gt;

&lt;p&gt;Commerce Guys are leading the way with Drupal Commerce. They have been
&lt;a href=&quot;https://github.com/commerceguys&quot;&gt;factoring out components into separate libraries&lt;/a&gt;.
Other PHP projects beyond Drupal are making use of them, and contributing to
their development.
Expect more contrib projects to factor out separate PHP packages of re-usable code.
Then Drupal modules become just a thin layer of glue.&lt;/p&gt;

&lt;p&gt;There has been a trend for PHP Frameworks to decouple their core components.
The Symfony Components split from the full stack framework has
meant much wider adoption. They are used in &lt;a href=&quot;http://symfony.com/projects&quot;&gt;many PHP projects&lt;/a&gt;,
including Drupal.&lt;/p&gt;

&lt;p&gt;PHP-FIG exists to promote interoperability between frameworks. This year will see further initiatives to clean up Drupal&amp;#39;s code. Such as, removal of anti-patterns like service locator. The eventual aim will be to decoupling components from Drupal core.&lt;/p&gt;

&lt;p&gt;Can you imagine using Views on a non-drupal project?&lt;/p&gt;
</description>
        <pubDate>Thu, 28 Jan 2016 14:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/01/28/drupal-predictions/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/01/28/drupal-predictions/</guid>
      </item>
    
      <item>
        <title>Work in Progress: The Future of (My) Web (Part 2, Leaving WhatsApp)</title>
        <description>&lt;p&gt;I&amp;#39;ve deleted WhatsApp. I wasn&amp;#39;t going to post about this,
as I don&amp;#39;t want to sound like a broken record.
But, as several people have emailed me asking why,
I thought I would explain my decision.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;I have &lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/12/03/work-in-progress/&quot;&gt;posted about this before&lt;/a&gt;
when I left Facebook.
I&amp;#39;m not just ranting about data surveillance and privacy concerns.
I have other concerns about our relationship with technology. There are
certain ideas that are in danger of becoming locked in unless
we come up with alternatives.
My attitude is solution focused.&lt;/p&gt;

&lt;p&gt;So WhatsWrong with WhatsApp?&lt;/p&gt;

&lt;h2&gt;It&amp;#39;s free.&lt;/h2&gt;

&lt;p&gt;They annouced recently that they are removing the subscription and making the service free.
There is now no doubt what the real business model is.
You are not their customer, you are their product.&lt;/p&gt;

&lt;h2&gt;No API&lt;/h2&gt;

&lt;p&gt;Brian Acton, WhatsApp cofounder, has publicly stated that there will never be an API.
Interoperability is never going to be an option with Whatsapp.&lt;/p&gt;

&lt;p&gt;Compare with email: You use gmail, someone else uses hotmail, and I have my own email
software I built myself. We can all freely email each other.&lt;/p&gt;

&lt;p&gt;We&amp;#39;re on different mobile networks, but we can still freely send each other SMS messages.&lt;/p&gt;

&lt;p&gt;This will never be the case with WhatsApp.
If you&amp;#39;re not on WhatsApp you don&amp;#39;t exist.
WhatsApp is a monoculture silo.&lt;/p&gt;

&lt;p&gt;I want to be part of building an independent, open future.
The involves removing myself from networks that don&amp;#39;t support open standards, interoperability, and diversity.&lt;/p&gt;

&lt;p&gt;By the principle of &amp;quot;selfdogfooding&amp;quot;, removing myself gives me the motiviation
I need to build and contribute to an alternative
&lt;a href=&quot;http://indiewebcamp.com/&quot;&gt;Indie Web&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;quot;The IndieWeb is a people-focused alternative to the ‘corporate web’.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Wed, 27 Jan 2016 00:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/01/27/why-i-left-whatsapp/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/01/27/why-i-left-whatsapp/</guid>
      </item>
    
      <item>
        <title>Buckminster Fuller, in Plain English</title>
        <description>&lt;p&gt;I &lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/07/12/happy-birthday-bucky/&quot;&gt;wrote a blog post&lt;/a&gt;
to commemorate Buckminster Fuller&amp;#39;s birthday back in July,
and have now returned to his works. I am watching again
his lecture series &amp;quot;Everything I Know&amp;quot;.
There are many important messages and deep lessons in Bucky&amp;#39;s lectures that
still apply today. I am only
starting to scratch the surface.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;As I watch, and follow the transcripts, I am
working on my own set of notes.
I hope by rewriting Bucky&amp;#39;s words in plain english
I can help make these lessons accessible to more people.&lt;/p&gt;

&lt;p&gt;I using the &lt;a href=&quot;https://archive.org/details/buckminsterfuller&quot;&gt;video series uploaded to archive.org&lt;/a&gt;
and &lt;a href=&quot;https://bfi.org/about-fuller/resources/everything-i-know/session-1&quot;&gt;transcribed here&lt;/a&gt;
as the source of these works.&lt;/p&gt;

&lt;h2&gt;Everything I Know by Buckminster Fuller&lt;/h2&gt;

&lt;p&gt;An attempt to better understand the lessons of Buckminster Fuller, by translating into Plain English.&lt;/p&gt;

&lt;h3&gt;Session 1 - Part 1&lt;/h3&gt;

&lt;p&gt;We are all born naked, helpless, and ignorant. That’s where humanity has always started. We have had to find our own way, by trial and error, driven by instinctive urges.&lt;/p&gt;

&lt;p&gt;Humans have been on our planet for millions of years with very little physiological change. In India and China, as far back as 5,000 years ago, we were thinking extraordinarily well about our experience and the principles of our universe. Astonishing, in view of the limited amount of information humanity had at that time.&lt;/p&gt;

&lt;p&gt;Now, because we have systems to record information, we can see the rapid rate at which it is increasing. We can’t keep track of the rate at which we are discovering more. Like a child, formed in the womb for nine months, being born into an entire new world — we are coming out of a common womb of ignorance, transitioning into a new relationship with the universe. Not, as a divided humanity spread across the planet, but as a whole.&lt;/p&gt;

&lt;p&gt;We are living as people of the world. Things thought impossible become reality within a generation. Things once dismissed as nonsense, become typical. None of it was planned. There was nobody in previous generations prophesying about the impossibles that are happening today. Not one of these steps was anticipated by any of the preceding. But, no sooner than it has happened, the human says “I knew it all the time. I’m not one of those who are suprised… I was a little bit responsible.”&lt;/p&gt;

&lt;p&gt;There is a strange vanity inherent in humans. Essential to being born naked and helpless, and having to make the fantastic number of mistakes in order to learn. Without which, we would have become disgruntled, and dismayed by our mistakes, and not been able to carry on. And so we were given this strange vanity so we are able to decieve ourselves. Like saying “getting to the moon, anybody can do that. It’s simple and logical.” Now it’s obvious, but only because it happened in your lifetime, and you can see how it happened.&lt;/p&gt;

&lt;h3&gt;Session 1 - Part 2&lt;/h3&gt;

&lt;p&gt;When people say natural they mean as it was in their day. As rules and customs change over time, so the young people begin to see things differently. Any tension between generations is down to the young being born into a new natural, which is unnatural to their elders.&lt;/p&gt;

&lt;p&gt;The lily might assume it was always going to be a seed, then it grows up and gets leaves, then it flowers. Each of these changes a surprise. Patterns like this operate on humanity too, but the vanity of human beings is such that they don’t like to be caught by surprise. Humans have always had troubles, but have never before been so aware of the troubles of others, and so aware of the totality of great trouble. The vanity factor again makes them feel responsible.&lt;/p&gt;

&lt;p&gt;If something is unfamiliar we say it is artificial or unnatural. There is nothing artifical or unnatural. If nature permits it, it is natural. If nature doesn’t permit it, you can’t do it. You may not be familiar with the fact nature allows it, but your unfamiliarity doesn’t make it unnatural.&lt;/p&gt;

&lt;p&gt;Our earth is 8,000 miles diameter, a hundredth the size of the sun, our star, which itself is a minor star. From the moon you can’t make out a mountain on earth, let alone a human being. The aberration of the highest mountain to the deepest depth of the ocean, when taken over 8,000 miles of the earth’s diameter, is insignificant. A polished steel ball is rougher.&lt;/p&gt;

&lt;p&gt;We are invisible on a tiny planet. Orbiting a negligible little star. Which is one of a hundred billion stars in one of a known billion galaxies. As tiny as we are, we have information of an 11 1/2 light year radius. The fact that we have this kind of capability, despite our physical insignificance, hints that we have some very great significance in the scheme.&lt;/p&gt;

&lt;p&gt;We don’t know of any other phenomena that has this mind. There are many creatures that have brains, each combine individual senses to create a special case. But the human mind we find able to do something that the brain cannot do. To review the special case experiences, and from time to time intuit that something else is going on. Something that was not predicted or suggested by the special case experiences considered only by themselves.&lt;/p&gt;

&lt;p&gt;The earliest annals of man record five bright lights in the sky. Much smaller than the sun and the moon, but behaving in ways the other myriad of lights in the sky did not. The others stayed constant, but these five moved around and were a little brighter than the others. We tracked where they would appear and saw regularities. Good recordings of these behaviours were made, of what we began to call the planets. Five special cases differentiated by their unique behaviour.&lt;/p&gt;

&lt;h3&gt;TBC...&lt;/h3&gt;
</description>
        <pubDate>Tue, 26 Jan 2016 02:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/01/26/buckminster-fuller-in-plain-english/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/01/26/buckminster-fuller-in-plain-english/</guid>
      </item>
    
  </channel>
</rss>
