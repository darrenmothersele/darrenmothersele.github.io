<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Software developer who builds simple, creative, and independent technology. He believes this will empower humans to create a better future.
</description>
    <link>http://www.darrenmothersele.com</link>
    <atom:link href="http://www.darrenmothersele.com/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Unwired</title>
        <description>&lt;p&gt;In a bold move, Wired have removed themselves from the open web.&lt;/p&gt;

&lt;figure&gt;&lt;img src=&quot;/img/blog/wired-blocked.png&quot; /&gt;&lt;/figure&gt;

&lt;p&gt;I enjoy buying the printed version of Wired magazine. Packed full of glossy adverts, I assumed this supported the online version. It seems that is not the case.&lt;/p&gt;

&lt;p&gt;I understand why Wired are doing this. With a more tech savvy audience, I guess they are suffering more from the rise of adblocking than others. Reports have claimed publishers earn less from advertising than users pay in bandwidth charges. Using an adblocker is now a necessity. It saves money, and improves the experience and performance of the open web. I’m sure Wired have taken this all into account. It is clear we need new a new model, and it’s brave of Wired to push this on us.&lt;/p&gt;

&lt;p&gt;The open web is the platform we are all building together. Our competition are the walled-garden silos. We are building a free and open ecosystem. Our competition are the closed monoliths with a single gatekeeper. The variety of experience across the open web can be our strength, but also our weakness. Our competition has tight control over user experience and strives to remove all friction. They may disrespect and exploit users in many ways, but they do respect user experience.&lt;/p&gt;

&lt;p&gt;Unfortunately, this doesn’t just remove Wired from the open web. This is a blow to everyone building the open web. It degrades the experience for our users. It contributes to the ruining of the open web, pushing users to centralised silos.&lt;/p&gt;

&lt;p&gt;I hit this barrier when following a link to an article on Wired from the open web. Wired refused access. Unexpected blockages like this create a bad experience for our (the open web’s) users. By degrading the experience on the open web we push people to centralised silos.&lt;/p&gt;

&lt;p&gt;How are we going to deal with this on the open web? Do we need some way to mark up links that lead away from the open web?&lt;/p&gt;

&lt;p&gt;Can we make it clear when links go off to centralised silos? Can we markup links to paywalls, adblock-blockers, or with otherwise unexpected behaviour?&lt;/p&gt;

&lt;p&gt;Can we (the open web) innovate a way to remunerate publishers? Can we do this without blocking, creating friction, or otherwise ruining user experience?&lt;/p&gt;

</description>
        <pubDate>Mon, 14 Mar 2016 00:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/03/14/un-wired-blocked/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/03/14/un-wired-blocked/</guid>
      </item>
    
      <item>
        <title>Semantic Drift</title>
        <description>&lt;p&gt;Language is always evolving. Words go out of common usage, new words appear, and words change their meaning. The firehose of social media has given us new words, like the “selfie” and “clickbait”. The narcissistic undercurrent in these new terms indicates how these technologies are changing us. But, more concerning, are words where the actual meaning is changing. &lt;/p&gt;

&lt;p&gt;George Orwell coined the term &lt;em&gt;doublethink&lt;/em&gt; in the novel 1984. It formed part of Big Brother’s brainwashing programmes. Words take on dual meanings, leading to acceptance of conflict or contradiction via language. &lt;/p&gt;

&lt;p&gt;We talk about &lt;em&gt;social&lt;/em&gt; media, but a more appropriate term would be &lt;em&gt;anti-social&lt;/em&gt; media. When you hear phrases like “my selfie has 50 likes”, it’s less about being social, and more about bragging. A “social stream” feeds trivialities to followers, fans and friends. The danger is that this shallow form of connection, via the screen, mediated by technology, is replacing real meaningful connection and companionship. &lt;/p&gt;

&lt;p&gt;This brings us to the concept of &lt;em&gt;friend&lt;/em&gt;. As I mentioned in my post about &lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/12/03/work-in-progress/&quot;&gt;why I left Facebook&lt;/a&gt;, “you can have 1000 friends on Facebook, but only if you reduce your definition of what it means to be a friend.” We also now have &lt;em&gt;unfriend&lt;/em&gt; as a verb. &lt;/p&gt;

&lt;p&gt;Other nouns are becoming verbs, like &lt;em&gt;inbox&lt;/em&gt;. I hear people saying “inbox me”, or “I’ll inbox you”, when they referring to sending a private message. This annoys me. It may seem innocuous, but it highlights a lack of understanding about the difference between a message and where the message is stored. We have, in one word, conflated the process of sending a message with both it’s place of storage and the act of receiving it. When you consider the temporal aspects of this, it reveals the acceptance of omnipresent access to our attention. &lt;/p&gt;

&lt;p&gt;Perhaps the most abused word is &lt;em&gt;share&lt;/em&gt;. We have lost touch completely with what it really means to share something. From the compulsive &lt;em&gt;sharing&lt;/em&gt; of &lt;em&gt;selfies&lt;/em&gt; driven by a need for acceptance and dopamine reward, to the rebranding of “unsolicited advertising” as “sharing” on social media. &lt;/p&gt;

&lt;p&gt;We also hear a lot of the word &lt;em&gt;share&lt;/em&gt; with the rise of the (so called) &lt;em&gt;sharing&lt;/em&gt; economy. Uber and AirBnB are not based on sharing at all. It’s not sharing if you are paying a fee. And, the focus of startups in the “sharing economy” isn’t on creating a cooperative (shared) platform. They are actually about crowd-sourcing a monopoly. &lt;/p&gt;
</description>
        <pubDate>Fri, 11 Mar 2016 00:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/03/11/semantic-drift/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/03/11/semantic-drift/</guid>
      </item>
    
      <item>
        <title>AMA: What search engine(s) do you favour? I&#39;m assuming you&#39;re not a Google fan!</title>
        <description>&lt;p&gt;Good question.&lt;/p&gt;

&lt;p&gt;The search engine is the filter through which we access the vast information available on the web. This is a powerful position to be in, considering the influence that the web has on our lives. I would love to pay for a premium search service that operates on my behalf. But, unfortunately, that is not an option.&lt;/p&gt;

&lt;p&gt;Instead we have chosen dependency on free services run by huge corporations that make billions of dollars by manipulating what we see online. We license them free access to our valuable data. They build a rich profile of us from data about every aspect of our lives. They own our phone, email, documents, search history, DNS lookups, and web browsing.&lt;/p&gt;

&lt;p&gt;I would suggest not using the same company for search as you use for email or other personal information. Unfortunately, no search engine has the power of Google to produce such good results.&lt;/p&gt;

&lt;p&gt;I use DuckDuckGo as my default search engine. I like to use an alternative as my first attempt to find what I’m looking for. I then revert to Google as a second resort. 80% of the time the results don’t match what I’m expecting to see. In which case I prepend ‘!g ‘ to the search term in DuckDuckGo. This redirects to Google search results.&lt;/p&gt;

&lt;p&gt;Somehow this also avoids the privacy pop-up I see when I go straight to Google:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/blog/google-popup.png&quot; alt=&quot;Screenshot of Google Privacy Popup&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Searching Google via the &lt;a href=&quot;https://duckduckgo.com/bang&quot;&gt;DuckDuckGo Bang&lt;/a&gt; leads me straight to the results. I don’t know what happens to the annoying pop-up.&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Feb 2016 14:30:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/25/ama-search-engine/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/25/ama-search-engine/</guid>
      </item>
    
      <item>
        <title>Build Your Own PHP Framework at DrupalCamp London</title>
        <description>&lt;p&gt;I have revised and improved the training in preparation for DrupalCamp next week. I’ve incorporated some feedback, added a bit of theory, and included more practical examples. Join me and level up your PHP development skills in this 1 day course.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Build Your Own PHP Framework.&lt;/p&gt;

&lt;p&gt;Learn modern PHP practices and see the benefits first hand via practical examples. Learn object oriented design and how to apply design patterns.&lt;/p&gt;

&lt;p&gt;There’s a lot of old PHP code and information around on the web. With the massive improvements in PHP in recent years, a lot of this information is wrong and out of date. In this course I will be focusing on only modern, state of the art PHP.&lt;/p&gt;

&lt;p&gt;Moving from Drupal 7 to Drupal 8 means adopting modern, object-oriented, PHP practices. Drupal 8 has gone through a process of “getting off the island” and embracing the wider PHP ecosystem. We, as PHP developers using Drupal, can improve our own processes by doing the same.&lt;/p&gt;

&lt;p&gt;Building your own framework is a great way to learn the fundamentals of modern PHP. Regardless of your choice of framework, this will make you a better developer. A similar foundation of components underlies Drupal, Symfony, Silex, and Lavavel.&lt;/p&gt;

&lt;p&gt;Details:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Learn framework decoupling techniques.&lt;/li&gt;
  &lt;li&gt;Write better code by avoiding unnecessary complexity.&lt;/li&gt;
  &lt;li&gt;Use Domain Driven Design to tackle complexity and design better solutions.&lt;/li&gt;
  &lt;li&gt;Go beyond MVC and start to explore other design patterns such as command bus and repositories.&lt;/li&gt;
  &lt;li&gt;Learn simple strategies you can immediately apply to develop better code.&lt;/li&gt;
  &lt;li&gt;Understand the components at the core of Drupal 8, many other PHP frameworks and popular PHP apps.&lt;/li&gt;
  &lt;li&gt;Digestible 40 minute sections interspersed with practical workshop where you get hands-on experience.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will need a basic knowledge of PHP and a laptop that can run PHP. You will leave with a better understanding of the principles behind modern PHP and Drupal 8.&lt;/p&gt;

&lt;h3 id=&quot;tickets-available-herehttpseventsr20constantcontactcomregistereventregoeidka07ebt79sow1ef68caboseqcch&quot;&gt;&lt;a href=&quot;https://events.r20.constantcontact.com/register/eventReg?oeidk=a07ebt79sow1ef68cab&amp;amp;oseq=&amp;amp;c=&amp;amp;ch=&quot;&gt;Tickets available here&lt;/a&gt;.&lt;/h3&gt;

&lt;p&gt;£295.00 or
£95.00 concession tickets for sole traders, students and charities.
The training will be on Friday March 4, 2016 at City University London.&lt;/p&gt;
</description>
        <pubDate>Thu, 25 Feb 2016 10:30:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/25/php-training-at-drupalcamp-london/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/25/php-training-at-drupalcamp-london/</guid>
      </item>
    
      <item>
        <title>TinyLetter #3 - is the Magic Number</title>
        <description>&lt;p&gt;Posting up my third TinyLetter for posterity.
See my &lt;a href=&quot;http://www.darrenmothersele.com/contact/&quot;&gt;contact page&lt;/a&gt; for details of how to join my “Friends and Family” email list.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Hello!&lt;/p&gt;

&lt;p&gt;I’m happy to say that I’m writing this from the comfort of our new home. Nikki and I found a lovely little flat, just a few minutes walk from Queens Park in North West London.&lt;/p&gt;

&lt;p&gt;A week overlap before Nikki’s tenancy is up has given me a chance to have a clear out. I finally got all my stuff out of storage, after 6 months, and immediately set about purging. And it feels great!&lt;/p&gt;

&lt;p&gt;The last time I had a clear out like this was several years ago, before my sojourn in Sardegna. Since returning to London I’ve collected quite a lot of crap. I recently read “&lt;a href=&quot;http://http//tidyingup.com/books/the-life-changing-magic-of-tidying-up-hc&quot;&gt;The Life-Changing Magic of Tidying Up&lt;/a&gt;” by Marie Kondo. This gave me a different perspective on the process of tidying, and I hope this leads to lasting change. I’m certainly experiencing a clarity, and lightness, that tidying hasn’t given me before.&lt;/p&gt;

&lt;p&gt;I spent a weekend in Brussels for FOSDEM, the annual Free and Open Source Developers Meeting. I joined over 5,000 developers to talk about open source and software freedom.&lt;/p&gt;

&lt;p&gt;It was obvious, while enroute to the opening session, how different this event was going to be. If it wasn’t for the swarm of developers, or the delivery of a truck-load of Club Mate, you could have missed it.&lt;/p&gt;

&lt;p&gt;This was my first FOSDEM. I’ve never been to a conference quite like this. There was no registration required to attend and the sponsorship was subtle. Unlike other tech conferences I’ve attended in recent years. Usually I’d expect excessive corporate branding, and sales pitches disguised as sessions.&lt;/p&gt;

&lt;p&gt;In this sense, FOSDEM is the antithesis of the New Relic DevOps summit I attended last week. I had to leave this “summit” after just a couple of hours because it had been all sales pitch and no content.&lt;/p&gt;

&lt;p&gt;FOSDEM packed in over 310 hours of scheduled content into the weekend. Various communities come together here united by common values of openness and freedom. Values that pervade through every aspect of the event.&lt;/p&gt;

&lt;p&gt;My main takeaway from the weekend was a deeper understanding of the distinction between open source and free software. I’ve been struggling to reconcile my drive to be independent, and to go serverless. I didn’t reach any conclusions this weekend. I didn’t resolve anything, but hearing from others gave me some new perspectives.&lt;/p&gt;

&lt;p&gt;On my return to London I attended Dialogue. I’ve become a regular attendee of these events, on the first Wednesday of the month. The event is “a creative dialogue between science, art, technology, ethics and politics.” Every month I leave frustrated, yet keep going back for more. This month was a subject close to my heart. The conversation was “Privacy, Protection, Publicity: Does Your Freedom Have Boundaries?”&lt;/p&gt;

&lt;p&gt;As usual, there was an incredible panel of experts from various fields. But, as usual, the conversation didn’t go deep enough into any aspect of the topic. Instead, the discussion flits between reasoned insights and misinformed throwaway comments. Despite this the event is very entertaining and informative.&lt;/p&gt;

&lt;p&gt;The current series has come to an end, and they’ve not annouced the next batch yet. I’ll keep an eye out, as it’s a worthwhile way to spend a Wednesday evening.&lt;/p&gt;

&lt;p&gt;I continue to rethink my relationship with technology. This month I [wrote about my decision to leave WhatsApp](http://www.darrenmothersele.com/blog/2016/01/27/why-i-left-whatsapp/. I also summerised my ongoing dithering over &lt;a href=&quot;http://www.darrenmothersele.com/blog/2016/02/02/rethinking-twitter/&quot;&gt;what to do about Twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Coming up in the next month…&lt;/p&gt;

&lt;p&gt;DrupalCamp London accepted my session proposal. I’ll be talking about “&lt;a href=&quot;http://www.darrenmothersele.com/blog/2016/01/21/survive-and-thrive-drupal-8/&quot;&gt;surviving - and thriving - during the transition to Drupal 8&lt;/a&gt;”. This talk builds on a &lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/11/16/surviving-open-source-gentrification/&quot;&gt;previous article&lt;/a&gt; where I used gentrification as a metaphore for changes in the Drupal community. I bring in some new research and experiences, and draw some interesting conclusions.&lt;/p&gt;

&lt;p&gt;I will also be running a training day on the Friday. It will be the third year I’ve run training at the Camp. This time I’m doing something different. I’ve created a course called “&lt;a href=&quot;http://www.darrenmothersele.com/blog/2016/02/11/drupal-camp-london-training/&quot;&gt;Build your own PHP Framework&lt;/a&gt;.”&lt;/p&gt;

&lt;p&gt;Conciousness Hacking&lt;/p&gt;

&lt;p&gt;I’ll be attending this “&lt;a href=&quot;http://http//www.meetup.com/Consciousness-Hacking-London/events/228318878/&quot;&gt;Consciousness Hacking&lt;/a&gt;” meetup next month. I’m not sure what to expect, but the event intrigues me. It’s described as “a growing global community encouraging exploration into the ways that technology can be in service to the highest ideals of humanity and support the evolution of our individual and collective experience.” Sounds right up my street!&lt;/p&gt;

&lt;p&gt;Have a great month! Drop me a line and let me know what you’re up to,&lt;/p&gt;

&lt;p&gt;Thanks for reading,&lt;/p&gt;

&lt;p&gt;Daz&lt;/p&gt;

</description>
        <pubDate>Tue, 23 Feb 2016 14:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/23/tinyletter-3/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/23/tinyletter-3/</guid>
      </item>
    
      <item>
        <title>Playing with Infinity in PHP</title>
        <description>&lt;p&gt;I’ve been playing around with lazy evaluation in PHP.
This is made possible by using Generators, added to PHP 5.5
and refined in PHP 7.
You can do some cool stuff with infinite (or very
large) data sets, and avoid getting stuck in infinite loops.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Imagine you want to create an infinitely long array of the same value.
Here’s a simple bit of code that would do this. Obviously don’t try this.
Just read the code and imagine a world where this is a good idea…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function repeat($i)
{
    $output = [];
    while (true)
    {
        $output[] = $i;
    }
    return $output;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This function would never terminate. You get stuck in an
infinite loop. &lt;code&gt;while(true)&lt;/code&gt; is not something you ever want to see
in a program, right?&lt;/p&gt;

&lt;p&gt;Well, not if you do lazy evaluation. In this context lazy means you
only evaluate as much code as you need to get the result. So you
can have large, even infinite, sets of data, without getting stuck in
long, or infinite, loops.&lt;/p&gt;

&lt;p&gt;PHP has a feature for lazy evaluation. It’s called a Generator,
summoned into being using the magical &lt;code&gt;yield&lt;/code&gt; keyword.
Here’s the stupid repeat, but this time as a generator…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function repeat($i)
{
    while (true)
    {
        yield $i;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You have to be careful using infinite sets.
You can still easily create an unterminating program if you tried to print
out the whole of this Generator function.&lt;/p&gt;

&lt;p&gt;But, what if we just wanted to work with the first 5 items from
our infinite computation. This is now possible because of lazy
evaulation. Here’s a take function that will take
any number of items from any Generator:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function take($i, Generator $generator)
{
    while ($i-- &amp;gt; 0 &amp;amp;&amp;amp; $generator-&amp;gt;valid())
    {
        yield $generator-&amp;gt;current();
        $generator-&amp;gt;next();
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let’s take 5…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foreach (take(5, repeat(&#39;Hello&#39;)) as $item)
{
    echo $item, PHP_EOL;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK, that was a stupid example. What about something a bit more
interesting? How about the classic fibonnacci sequence generator?&lt;/p&gt;

&lt;p&gt;For some reason the examples I found on both
&lt;a href=&quot;http://stackoverflow.com/questions/19835499/recursive-generators-in-php&quot;&gt;Stack Overflow&lt;/a&gt;
and the &lt;a href=&quot;http://php.net/manual/en/language.generators.syntax.php&quot;&gt;PHP Manual&lt;/a&gt;
were more complex than they needed to be.&lt;/p&gt;

&lt;p&gt;Here is the simplist infinite fibonacci generator I can think of…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function fib()
{
    yield $i = 0;
    yield $j = 1;
    while (true) {
        yield $k = $i + $j;
        $i = $j;
        $j = $k;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And here’s the first 50 fibonacci numbers…&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foreach (take(50, fib()) as $item)
{
    echo $item, PHP_EOL;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And, here’s the first 10, skipping the first 0 using a tail function:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function tail(Generator $list)
{
    $list-&amp;gt;next();
    yield from $list;
}

foreach (take(50, tail(fib())) as $item)
{
    echo $item, PHP_EOL;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In case you’re curious, there are actual use cases for this.
For example, this &lt;a href=&quot;https://github.com/MarkBaker/GeneratorQuadTrees&quot;&gt;Quad Tree&lt;/a&gt;
data structure implementation.&lt;/p&gt;

&lt;p&gt;Generators may not offer better performance in terms of execution speed.
But, generator based algorythms offer a much lower memory overhead
as you’re not having to pass around the full data sets.&lt;/p&gt;
</description>
        <pubDate>Thu, 18 Feb 2016 09:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/18/php-to-infinity/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/18/php-to-infinity/</guid>
      </item>
    
      <item>
        <title>Build Your Own PHP Framework</title>
        <description>&lt;p&gt;I’m excited to announce that I’ll be back running training at this year’s Drupal Camp in London. This will be the 3rd year in a row that I’ve offered training at the camp. I’m doing something a bit different this time…&lt;/p&gt;

&lt;!--break--&gt;

&lt;h2 id=&quot;build-your-own-php-framework&quot;&gt;Build Your Own PHP Framework&lt;/h2&gt;

&lt;p&gt;In this training you will build your own PHP framework.&lt;/p&gt;

&lt;p&gt;But, why reinvent the wheel?&lt;/p&gt;

&lt;p&gt;Building your own framework is a great way to learn the fundamentals of modern PHP. Regardless of your choice of framework, this will make you a better developer. A similar foundation of components underlies Drupal, Symfony, Silex, and Lavavel.&lt;/p&gt;

&lt;p&gt;If you are a developer going from Drupal 7 to Drupal 8 then you need to adopt an object-oriented mindset.&lt;/p&gt;

&lt;p&gt;Drupal doesn’t always get it right. If you understand the basic principles you know when and why you’re breaking them. You can make pragmatic choices as a programmer, without embodying bad practices.&lt;/p&gt;

&lt;p&gt;“Build Your Own Framework” is a fun training to learn modern PHP. You will learn the “SOLID” principles of PHP package design. The training will demystify dependency injection, hexagonal architecture and other design patterns. We will look at HTTP Foundation and the other Symfony components.&lt;/p&gt;

&lt;p&gt;Come armed with a basic knowledge of PHP, a laptop that can run PHP, and an open mind. Leave with a better understanding of the principles behind modern PHP and Drupal 8.&lt;/p&gt;

&lt;h3 id=&quot;tickets-available-herehttpseventsr20constantcontactcomregistereventregoeidka07ebt79sow1ef68caboseqcch&quot;&gt;&lt;a href=&quot;https://events.r20.constantcontact.com/register/eventReg?oeidk=a07ebt79sow1ef68cab&amp;amp;oseq=&amp;amp;c=&amp;amp;ch=&quot;&gt;Tickets available here&lt;/a&gt;.&lt;/h3&gt;

&lt;p&gt;The training will be held on Friday March 4, 2016 at City University London.&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Feb 2016 17:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/11/drupal-camp-london-training/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/11/drupal-camp-london-training/</guid>
      </item>
    
      <item>
        <title>PHP Processing Pipeline</title>
        <description>&lt;p&gt;If you’re faced with refactoring a huge bunch of sequential code
then a pipeline may be the answer.
With a processing pipeline you create your code in stages.
Then you compose the stages into a pipeline, and pass your
input for processing.&lt;/p&gt;

&lt;p&gt;This is great because each of the stages can be easily tested
independently. It also makes the code much easier to read and
maintain.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;There’s a nice and simple implementation published by the
&lt;a href=&quot;http://thephpleague.com/&quot;&gt;League of Extraordinary Packages&lt;/a&gt;.
I’ve created a fork (&lt;a href=&quot;https://github.com/darrenmothersele/pipeline&quot;&gt;on GitHub here&lt;/a&gt;)
which offers an even simpler syntax.&lt;/p&gt;

&lt;p&gt;Here’s a very basic example to show off this new syntax.
You create your stages as simple classes with an invoke method.
For example:&lt;/p&gt;

&lt;p&gt;```php
class Double {
    public function __invoke($payload)
    {
        return $payload * 2;
    }
}&lt;/p&gt;

&lt;p&gt;class Square {
    public function __invoke($payload)
    {
        return $payload * $payload;
    }
}
```&lt;/p&gt;

&lt;p&gt;You could even pass in parameters to the stage constructor:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php
class Add {
    private $i;
    public function __construct($i)
    {
        $this-&amp;gt;i = $i;
    }
    public function __invoke($payload)
    {
        return $payload + $this-&amp;gt;i;
    }
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then create a &lt;code&gt;Pipeline&lt;/code&gt; to chain the stages together:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php
$pipe = (new Pipeline)-&amp;gt;Double()-&amp;gt;Square()-&amp;gt;Add(10);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And then you can process values using the Pipeline:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php
echo $pipe-&amp;gt;process(10), PHP_EOL;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can even process a list of values:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;php
var_dump(array_map($pipe, [1, 2, 3]));
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Obviously you are not just limited to processing integers as in these
examples. XML documents, converting to JSON, filtering, translating
and other transformations are great candidates for pipelines stages.&lt;/p&gt;

&lt;p&gt;I’ve submitted a pull request for my simple modification. All I did
was add an implementation of the &lt;code&gt;__call()&lt;/code&gt; method so you can
add stages without having to explicitly &lt;em&gt;new&lt;/em&gt;-up objects and
pass them into the &lt;code&gt;pipe()&lt;/code&gt; method.&lt;/p&gt;

&lt;p&gt;Hopefully my pull request gets accepted. The only thing to be aware
of is that I made use of the variadic operator, so it needs a PHP
version of 5.6 or greater.&lt;/p&gt;

</description>
        <pubDate>Thu, 11 Feb 2016 14:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/11/processing-pipelines-php/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/11/processing-pipelines-php/</guid>
      </item>
    
      <item>
        <title>The Future of (My) Web Part 3 - Rethinking Twitter</title>
        <description>&lt;p&gt;I feel sorry for Twitter. It’s never been sure what it’s supposed to be. Twitter pioneered and popularised the idea of microblogging, then  almost killed it.&lt;/p&gt;

&lt;p&gt;As part of my ongoing experiment I have stopped using
&lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/12/03/work-in-progress/&quot;&gt;Facebook&lt;/a&gt; and
&lt;a href=&quot;http://www.darrenmothersele.com/blog/2016/01/27/why-i-left-whatsapp/&quot;&gt;WhatsApp&lt;/a&gt;. The decision is not as simple this time as I don’t want to completely remove myself from Twitter.&lt;/p&gt;

&lt;!--break--&gt;

&lt;h2 id=&quot;whats-wrong-with-twitter&quot;&gt;What’s wrong with Twitter&lt;/h2&gt;

&lt;p&gt;I joined Twitter in April 2008 while at the first Social Innovation camp. The camp organisers used Twitter to broadcast messages to all attendees. It was useful.&lt;/p&gt;

&lt;p&gt;Twitter’s functionality was simple. It became a great example of how innovation can come from users. Features such as hash-tags emerged from how people used the technology. Compare this with other services that learnt how to limit and control their users by progressively introducing features. Such as Facebook’s slow boiling of the privacy frog.&lt;/p&gt;

&lt;p&gt;Twitter is another corporate controlled silo. And, compared to the lo-fi, elegant, and clean idea of 140 character public messaging, Twitter today is a mess. My stream flooded with image spam posted to draw attention to tweets. And, unnecessary screenshots of text posted to bypass the limited message size.&lt;/p&gt;

&lt;h2 id=&quot;how-i-currently-use-twitter&quot;&gt;How I Currently use Twitter&lt;/h2&gt;

&lt;p&gt;To plan my future relationship with Twitter I have first looked at
how I currently use the service. I’ve identified the following types of usage:&lt;/p&gt;

&lt;h3 id=&quot;aggregator&quot;&gt;0. Aggregator&lt;/h3&gt;

&lt;p&gt;I have a network of friends and colleagues in digital technology, creative coding, free software, and other interests. Twitter collects the thoughts, opinions, and silliness from this eclectic mix of people. This makes it fun and serious, informative and weird.&lt;/p&gt;

&lt;p&gt;I wouldn’t find this variety of updates if they were not all aggregated into once place. But, at the same time, this can be a distracting waste of time. And it’s getting harder to filter out the signal from the noise.&lt;/p&gt;

&lt;h3 id=&quot;live-blogging&quot;&gt;1. Live-blogging&lt;/h3&gt;

&lt;p&gt;If I’m at an event with Wifi signal I tend to tweet a lot more than usual. I &lt;em&gt;live-blog&lt;/em&gt; my experience of the event, mainly for my own benefit. This makes it easier to remember what I did when I review the event afterwards.&lt;/p&gt;

&lt;h3 id=&quot;rss-feed&quot;&gt;2. RSS feed&lt;/h3&gt;

&lt;p&gt;Back in the day, people would subscribe to my RSS feed to get updated when I added new content to my site. Since Google killed RSS when they shut down Reader, nobody seems to do that anymore.&lt;/p&gt;

&lt;p&gt;I use Twitter to post up bits from my own blog and writing, with links back to my site. Using it as a way to let people know I’ve posted something new.&lt;/p&gt;

&lt;h3 id=&quot;web-links&quot;&gt;3. Web Links&lt;/h3&gt;

&lt;p&gt;I also post up quotes and links to things I’ve found on the net. Useful stuff I’ve found for work, quotes for inspiration, or things related to my interests.&lt;/p&gt;

&lt;h3 id=&quot;observations&quot;&gt;4. Observations&lt;/h3&gt;

&lt;p&gt;Sometimes I feel the need to comment on things I observe. I particularly enjoy paradox and inconsistency. If I have my phone on me, and I’m in the right mood, I share on Twitter.&lt;/p&gt;

&lt;h3 id=&quot;conversation&quot;&gt;5. Conversation&lt;/h3&gt;

&lt;p&gt;Twitter is a noisy place to try and have a conversation with people. I love how anyone can chime in and join a conversation. I always enjoy hearing from other points of view.&lt;/p&gt;

&lt;p&gt;Sometimes I start public conversations with companies that have disappointed me. It’s a way to get a response, when they don’t answer the phone or emails.&lt;/p&gt;

&lt;h3 id=&quot;brain-dump&quot;&gt;6. Brain-dump&lt;/h3&gt;

&lt;p&gt;Sometimes I just post up random thoughts I’ve been having. Maybe these are things I don’t need to shout out to the world. But stuff I still want to log somewhere. Twitter isn’t the correct place for this.&lt;/p&gt;

&lt;h2 id=&quot;alternative-to-twitter&quot;&gt;Alternative to Twitter&lt;/h2&gt;

&lt;p&gt;I still want to engage with my network on Twitter. But I want to decouple my communication from the silo. This is what the Indie Web refer to as &lt;a href=&quot;https://indiewebcamp.com/POSSE&quot;&gt;POSSE&lt;/a&gt; (Post on Own Site, Syndicate Elsewhere).&lt;/p&gt;

&lt;p&gt;I’ve been thinking of what I’d like to build as an alternative to Twitter.
&lt;a href=&quot;http://www.darrenmothersele.com/blog/2015/07/12/happy-birthday-bucky/&quot;&gt;Buckminster Fuller&lt;/a&gt;’s Dymaxion Chronofile comes to mind. Bucky documented his entire life, from the point where he started to live his life as an experiment, in what he called a “Chronofile”.&lt;/p&gt;

&lt;p&gt;I have already implemented a private “idea log”. This is somewhere to post all the random thoughts that are not yet fully formed. This helps me collect disparate thoughts and allow them to coalesce
into something more considered. It creates space in my mind by getting things out of my head. Working like a real extension to my memory, some things stick around. But, also like real memory, I need a way to forget. Sometimes, it’s good to let go.&lt;/p&gt;

&lt;p&gt;Posting notes to my own site, and syndicating them to Twitter, is now top of my list. This will be the next feature to develop for my website.&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Feb 2016 00:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/02/02/rethinking-twitter/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/02/02/rethinking-twitter/</guid>
      </item>
    
      <item>
        <title>My First Front-end London</title>
        <description>&lt;p&gt;Last night I got to attend &lt;a href=&quot;http://www.frontendlondon.co.uk/&quot;&gt;FEL&lt;/a&gt; for the first time. The popular meetup, hosted by &lt;a href=&quot;http://madebymany.com/&quot;&gt;Made by Many&lt;/a&gt;, celebrating it’s 3rd anniversary last night. I have
&lt;a href=&quot;https://calumryan.com/&quot;&gt;Calum Ryan&lt;/a&gt;, fellow Indiewebber, to thank for sorting me out a ticket.&lt;/p&gt;

&lt;!--break--&gt;

&lt;p&gt;Calum was up first talking about &lt;a href=&quot;http://indiewebcamp.com/&quot;&gt;#indieweb&lt;/a&gt;. He summarised the movement well. The talk gave detail of the motivations, principles, and technology. I was happy to learn that &lt;a href=&quot;https://www.w3.org/TR/2016/WD-webmention-20160112/&quot;&gt;Webmention has a first draft of a W3C standard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was encouraging to hear this was Calum’s first presentation. A great start, and I hope he continues on this path.&lt;/p&gt;

&lt;p&gt;Then &lt;a href=&quot;http://bodil.lol/&quot;&gt;Bodil Stokke&lt;/a&gt; took us on a tour of generators in ES6. This makes me want to do more Javascript. If only because I have a thing for the world &lt;em&gt;yield&lt;/em&gt;. It might be my favourite word. I love all that it implies. For me, in conjures up images of Taoism, effortless action, and the path of least resistance.&lt;/p&gt;

&lt;p&gt;Of particular interest was the backwards use of generators as consumers used in monads. We saw generators combined with Promises to write asynchronous code without callbacks. Simply beautiful.&lt;/p&gt;

&lt;p&gt;The presentation is &lt;a href=&quot;http://bodil.lol/generators/&quot;&gt;online here&lt;/a&gt;.
I also made a note to check out the &lt;a href=&quot;http://github.com/tj/co&quot;&gt;Co library&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Wrapping up the trio of speakers for the night was &lt;a href=&quot;http://macr.ae/&quot;&gt;Callum Macrae&lt;/a&gt;.
With more Ls and more LOLs that the first Calum.
He took us on a humorous tour of ES6, under the guise of deprecating jQuery.&lt;/p&gt;

&lt;p&gt;We saw how to replace jQuery features with native Javascript. With a polyfil, or transpiling, it seems jQuery does not add anything. Native Javascript winning on features in some cases. Callum also added that the overhead of using Babel is less than including jQuery. So there is no need for jQuery. Unless you want &lt;a href=&quot;https://gist.github.com/rwaldron/8720084#file-reasons-md&quot;&gt;old browser compatibility&lt;/a&gt; or are using a library with a dependency on jQuery.&lt;/p&gt;

&lt;p&gt;An entertaining and informative night. I’ll definitely be back.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Jan 2016 00:00:00 +0000</pubDate>
        <link>http://www.darrenmothersele.com//blog/2016/01/29/my-first-frontend-london/</link>
        <guid isPermaLink="true">http://www.darrenmothersele.com//blog/2016/01/29/my-first-frontend-london/</guid>
      </item>
    
  </channel>
</rss>
